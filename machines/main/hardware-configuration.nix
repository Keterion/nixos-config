# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/acc76c5d-9501-4ed1-be40-afe9eacb20d8";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-10761fec-b53f-4a72-8b52-bef6c1483b06".device = "/dev/disk/by-uuid/10761fec-b53f-4a72-8b52-bef6c1483b06";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/A29C-5FA1";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  #fileSystems."/mnt/Games" = {
  #  device = "/dev/disk/by-uuid/3212add8-8af3-46c6-a739-cfc018bd72ac";
  #  fsType = "ext4";
  #  options = ["users" "nofail" "x-gvfs-show"];
  #};

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp6s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp5s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
